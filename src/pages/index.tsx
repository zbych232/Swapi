import React, { useState, useRef } from 'react';
import Head from 'next/head';
import Image from 'next/image';
import styles from '@/styles/Home.module.css';
import type { GetStaticProps } from 'next';
import ShipsList from '@/components/ShipsList';
import Filters from '@/components/Filters';
import SearchBox from '@/components/SearchBox';
import axios from 'axios';

export default function Home({ films, ships }) {
  const [rows, setRows] = useState(ships);
  const [rerenderTrigger, setRerenderTrigger] = useState(true);
  const filters = useRef({ searchBox: '', films: [] });

  const handleFilterChange = filterValue => {
    filters.current = { searchBox: '', ...{ films: filterValue } };
    filterRows();
  };

  const handleSearchboxChange = value => {
    value != '' && setRerenderTrigger(!rerenderTrigger);
    filters.current = { films: [], ...{ searchBox: value } };
    filterRows();
  };

  const handleSearchboxClear = () => {
    filters.current = { ...filters.current, ...{ searchBox: '' } };
    filterRows();
  };

  const filterRows = () => {
    const filmsCollection = filters.current.films.map(film => film.url);
    filters.current.films.length > 0
      ? setRows(
          ships.filter(ship =>
            ship.films.some(film => filmsCollection.includes(film)),
          ),
        )
      : setRows(ships);

    if (filters.current.searchBox !== '') {
      setRows(
        ships.filter(
          ship =>
            ship.name
              .slice(0, filters.current.searchBox.length)
              .toLowerCase() === filters.current.searchBox.toLowerCase(),
        ),
      );
    }
  };

  return (
    <>
      <Head>
        <title>Swapi</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.main}>
        <div className={styles.filters}>
          <div className={styles.col}>
            <SearchBox
              handleSearchboxChange={handleSearchboxChange}
              handleSearchboxClear={handleSearchboxClear}
              searchBoxValue={filters.current.searchBox}
            />
          </div>
          <div className={styles.col}>or</div>
          <div className={styles.col}>
            <Filters
              films={films}
              handleFilterChange={handleFilterChange}
              rerenderTrigger={rerenderTrigger}
            />
          </div>
        </div>
        <ShipsList rows={rows} />
      </div>
    </>
  );
}

export const getStaticProps: GetStaticProps = async context => {
  const filmsResponse = await axios.get('https://swapi.dev/api/films');
  const filmsResult = filmsResponse?.data?.results;

  const shipsResponse = await axios.get('https://swapi.dev/api/starships');
  const { count } = shipsResponse?.data;
  const requestsNumber = Math.ceil(count / 10);
  const countArray = [];
  for (let i = 0; i < requestsNumber; i++) {
    countArray.push(i);
  }
  const promisesArray = [];
  countArray.forEach((element, index) => {
    promisesArray.push(
      axios.get(`https://swapi.dev/api/starships/?page=${index + 1}`),
    );
  });
  const responses = await Promise.all(promisesArray);
  const resultsArray = responses.map(ship => ship?.data?.results);
  const shipsResult = resultsArray.flat(1);

  return {
    props: {
      films: filmsResult,
      ships: shipsResult,
    },
  };
};
